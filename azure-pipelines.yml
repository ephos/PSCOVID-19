trigger:
    paths:
      exclude:
        - azure-pipelines.yml
        - .gitignore
        - LICENSE
        - ReadMe.md
        - images/*
    branches:
      include:
        - master

variables:
    - name: ModuleName
      value: 'PSCOVID-19'

pool:
  vmImage: 'windows-latest'

jobs:
  - job: PullRequest
    workspace:
      clean: all
      
    steps:
    - task: Pester@8
      displayName: 'Run Pester Tests'
      inputs:
        scriptFolder: '$(Build.SourcesDirectory)\tests\*'
        resultsFile: '$(Build.ArtifactStagingDirectory)\Test-Pester.XML'
        run32Bit: False
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: '$(Build.ArtifactStagingDirectory)'
      condition: succeededOrFailed()
  
  - job: ContinuousIntegration 
    dependsOn: PullRequest
    condition: and(succeeded('PullRequest'), ne(variables['Build.Reason'], 'PullRequest'))
    workspace:
        clean: all

    steps:
      - task: CopyFiles@2
        displayName: 'Copy Module Source to Staging'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)\src\'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)\$(ModuleName)\'
          CleanTargetFolder: true
          OverWrite: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)\$(ModuleName)'
          ArtifactName: '$(ModuleName)'
          publishLocation: 'Container'
      - task: PSGalleryPackager@0
        inputs:
          apiKey: '$(PSGallery)'
          path: '$(Build.ArtifactStagingDirectory)\$(ModuleName)'

