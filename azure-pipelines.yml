# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    paths:
      exclude:
        - azure-pipelines.yml
    branches:
      include:
        - master

variables:
    - name: ModuleName
      value: 'PSCOVID-19'

pool:
  vmImage: 'windows-latest'

jobs:
  - job: PullRequest
    workspace:
      clean: all
      # $(System.DefaultWorkingDirectory)
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "$(Build.SourcesDirectory)"
          Write-Host "$(Build.ArtifactStagingDirectory)"
          Get-ChildItem -Recurse -Path $(Build.SourcesDirectory)
          Get-ChildItem -Path $(Build.SourcesDirectory)\tests\*
        pwsh: true
    - task: Pester@8
      displayName: 'Run Pester Tests'
      inputs:
        scriptFolder: '$(Build.SourcesDirectory)\tests\*'
        resultsFile: 'Test-Pester.XML'
        run32Bit: False
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '**/TEST-*.xml'
        searchFolder: '$(Build.ArtifactStagingDirectory)'
      condition: succeededOrFailed()
  
  - job: ContinuousIntegration 
    dependsOn: PullRequest
    condition: and(succeeded('PR'), ne(variables['Build.Reason'], 'PullRequest'))
    workspace:
        clean: all

    steps:
      - task: CopyFiles@2
        displayName: 'Copy Module Source to Staging'
        inputs:
          SourceFolder: $(Build.SourcesDirectory)\src\'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)\$(ModuleName)'
          CleanTargetFolder: true
          OverWrite: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)\$(ModuleName)'
          ArtifactName: '$(ModuleName)'
          publishLocation: 'Container'

